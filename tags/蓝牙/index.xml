<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蓝牙 on 点半九</title><link>https://www.dianbanjiu.com/tags/%E8%93%9D%E7%89%99/</link><description>Recent content in 蓝牙 on 点半九</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 16 Sep 2019 13:30:06 +0800</lastBuildDate><atom:link href="https://www.dianbanjiu.com/tags/%E8%93%9D%E7%89%99/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 下蓝牙鼠标延迟严重</title><link>https://www.dianbanjiu.com/post/linux-%E4%B8%8B%E8%93%9D%E7%89%99%E9%BC%A0%E6%A0%87%E5%BB%B6%E8%BF%9F%E4%B8%A5%E9%87%8D/</link><pubDate>Mon, 16 Sep 2019 13:30:06 +0800</pubDate><guid>https://www.dianbanjiu.com/post/linux-%E4%B8%8B%E8%93%9D%E7%89%99%E9%BC%A0%E6%A0%87%E5%BB%B6%E8%BF%9F%E4%B8%A5%E9%87%8D/</guid><description>&lt;p>最近买了一个小米便携蓝牙鼠标，在 Arch Linux 下成功连接上鼠标之后，发现鼠标的延迟特别严重，但是鼠标连接到手机上却十分顺滑，由此基本断定是在 Arch Linux 上的某些配置导致的这些问题。&lt;/p>
&lt;h3 id="解决办法">解决办法&lt;/h3>
&lt;ul>
&lt;li>断开并重新连接鼠标。（无效）&lt;/li>
&lt;li>断开其他的外设，如无线键盘（使用 2.4GHZ 的无线接收器），断开 wifi（包括 2.4GHZ 和 5GHZ 的频段）。（无效）&lt;/li>
&lt;li>修改鼠标轮询率（Mouse polling rate ）。（丝般顺滑）&lt;/li>
&lt;/ul>
&lt;p>在系统的蓝牙设备管理器当中查看当前蓝牙鼠标的地址，地址字段类似于 &lt;code>D3:77:66:C8:FE:53&lt;/code>。然后在超级用户的状态下修改 &lt;code>/var/lib/bluetooth/&amp;lt;mac-of-your-adapter&amp;gt;/&amp;lt;mac-of-your-mouse&amp;gt;/info&lt;/code>，添加以下字段：&lt;/p>
&lt;blockquote>
&lt;p>一般情况，系统上只有一个蓝牙适配器，&lt;code>&amp;lt;mac-of-your-adapter&amp;gt;&lt;/code> 是可以直接使用 Tab 键来补全的，你只需要根据之前查看到的蓝牙鼠标地址替换掉 &lt;code>&amp;lt;mac-of-your-mouse&amp;gt;&lt;/code> 就可以了。&lt;/p>&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>[ConnectionParameters]
MinInterval=6
MaxInterval=9
Latency=44
Timeout=216
&lt;/code>&lt;/pre>&lt;p>通常 Linux 下的蓝牙设备是不会自动连接的，可以通过在 &lt;code>/etc/bluetooth/main.conf&lt;/code> 的 &lt;code>[Policy]&lt;/code> 下添加 &lt;code>AutoEnable=true&lt;/code> 将蓝牙设备设置为开机自动连接。&lt;/p>
&lt;h3 id="关于轮询率和轮询间隔">关于轮询率和轮询间隔&lt;/h3>
&lt;p>设备的轮询率（单位 Hz）取决于轮询间隔，轮询间隔以毫秒为单位进行测量，等于滞后时间。&lt;/p>
&lt;p>默认的轮询间隔一般为 10ms，但是 USB 控制器一般会向下取最近的 2 的整数次幂，所以 10ms 的轮询时间实际上是 8ms 的轮询时间。&lt;/p>
&lt;p>下面是几个常用轮询率与轮询间隔的对应表（速率 = 1000/轮询间隔）：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>轮询率（Hz）&lt;/th>
&lt;th>1000&lt;/th>
&lt;th>500&lt;/th>
&lt;th>250&lt;/th>
&lt;th>125&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>轮询间隔（ms）&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>4&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>如果是进行一些精度较高的活动时，可以把轮询间隔尽可能地调得小一些，不过这么做同时也会加重 CPU 的负担。&lt;/p></description></item></channel></rss>