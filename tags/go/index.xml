<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on 点半九</title><link>https://www.dianbanjiu.com/tags/go/</link><description>Recent content in Go on 点半九</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>dianbanjiu@gmail.com</copyright><lastBuildDate>Mon, 26 Dec 2022 11:17:32 +0800</lastBuildDate><atom:link href="https://www.dianbanjiu.com/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>同一目录下多 main 文件的 Debug 方法</title><link>https://www.dianbanjiu.com/post/%E5%90%8C%E4%B8%80%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%A4%9A-main-%E6%96%87%E4%BB%B6%E7%9A%84-debug-%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 29 Oct 2022 14:30:45 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%90%8C%E4%B8%80%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%A4%9A-main-%E6%96%87%E4%BB%B6%E7%9A%84-debug-%E6%96%B9%E6%B3%95/</guid><description>现在有一个项目包含如下文件 go.mod main.go demo.go main.go 文件内容如下 1 2 3 4 5 6 7 8 9 10 package main func main() { n := Node{ Id: 10, Data: &amp;#34;Hello foo&amp;#34;, } demo(n) } demo.go 文件内容如下 1 2 3 4 5 6 7 8 9 10 11 12 package main</description></item><item><title>在 Go 代码中检查是否实现了某个接口</title><link>https://www.dianbanjiu.com/post/%E5%9C%A8-go-%E4%BB%A3%E7%A0%81%E4%B8%AD%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%AE%9E%E7%8E%B0%E4%BA%86%E6%9F%90%E4%B8%AA%E6%8E%A5%E5%8F%A3/</link><pubDate>Tue, 09 Aug 2022 00:25:33 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%9C%A8-go-%E4%BB%A3%E7%A0%81%E4%B8%AD%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%AE%9E%E7%8E%B0%E4%BA%86%E6%9F%90%E4%B8%AA%E6%8E%A5%E5%8F%A3/</guid><description>go 里面想要实现一个接口，只需要实现这个接口中的 所有方法即可。这种方式看起来很简洁，但是却不利于后期的维护。因为没有显式的指明实现的接口，一旦</description></item><item><title>Go 多版本安装</title><link>https://www.dianbanjiu.com/post/go-%E5%A4%9A%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85/</link><pubDate>Wed, 15 Jun 2022 11:23:21 +0800</pubDate><guid>https://www.dianbanjiu.com/post/go-%E5%A4%9A%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85/</guid><description>工作中做 go 开发的时候，经常会遇到本地比打包机的 go 版本新的情况，而有些特性或者功能又只包含在新版本当中，导致时有打包失败的情况发生。比如，经常</description></item><item><title>从零开始配置 Go 开发环境</title><link>https://www.dianbanjiu.com/post/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE-go-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 22 Apr 2020 22:50:05 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE-go-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>安装 go 关于详细的安装教程，可以参考 官方安装文档 官网提供了各个操作系统下的安装包以及源码，你也可以尝试通过包管理器进行安装，更加简单而且方便后</description></item></channel></rss>