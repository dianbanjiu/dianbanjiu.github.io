<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>实用工具 on 点半九</title><link>https://www.dianbanjiu.com/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/</link><description>Recent content in 实用工具 on 点半九</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 06 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dianbanjiu.com/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 安装后</title><link>https://www.dianbanjiu.com/post/linux-%E5%AE%89%E8%A3%85%E5%90%8E/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.dianbanjiu.com/post/linux-%E5%AE%89%E8%A3%85%E5%90%8E/</guid><description>&lt;p>之前因为好奇心，在自己的笔记本上重装了 N 多次系统，虽然基本上都是局限在 Linux 的各种发行版之间，不过最近两三年基本上算是稳定下来，只尝试过 Manjaro 和 Arch Linux，最近两年的话就只有在使用 Arch Linux 了。下面记录一下我在重装系统之后会安装的一些软件以及基本都会做的一些简单配置，来帮助我更好的使用这台电脑&lt;/p>
&lt;h2 id="配置源">配置源&lt;/h2>
&lt;p>为了保证后续软件安装的速度，在连接网络后的第一件事就是先配置国内的软件源&lt;/p>
&lt;p>1、编辑 &lt;code>/etc/pacman.d/mirrorlist&lt;/code>，搜索 &lt;code>China&lt;/code> 字段，将清华、中科大的镜像源移动到文件的开头&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、archlinuxcn 软件源提供了很多非官方源的常用软件包，在 &lt;code>/etc/pacman.conf&lt;/code> 的最后添加如下的内容以启用 archlinuxcn 源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>[archlinuxcn]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加完成之后需要安装 &lt;code>archlinuxcn-keyring&lt;/code> 来导入一些 archlinuxcn 对应的密钥&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo pacman -Syyu archlinuxcn-keyring
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="软件安装">软件安装&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>软件&lt;/th>
&lt;th>备注&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>chromium&lt;/td>
&lt;td>浏览器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tmux&lt;/td>
&lt;td>终端复用工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git&lt;/td>
&lt;td>版本管理工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>visual-studio-code-bin&lt;/td>
&lt;td>文本编辑器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tree&lt;/td>
&lt;td>树形目录查看&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>goland gland-jre&lt;/td>
&lt;td>go IDE，继承自 IDEA&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>spotify&lt;/td>
&lt;td>流音乐媒体&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>keepassxc&lt;/td>
&lt;td>密码管理工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jdk11-openjdk&lt;/td>
&lt;td>jdk&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>java11-openjfx&lt;/td>
&lt;td>goland 的 markdown 预览依赖此程序&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>docker&lt;/td>
&lt;td>容器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>obs-studio&lt;/td>
&lt;td>录屏&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>flameshot&lt;/td>
&lt;td>截图工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>yay&lt;/td>
&lt;td>aur 包安管理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>go&lt;/td>
&lt;td>go 语言开发环境&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fcitx5 fcitx5-im fcitx5-chinese-addons&lt;/td>
&lt;td>fcitx5 输入法框架&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>telegram-desktop&lt;/td>
&lt;td>IM 工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>hugo&lt;/td>
&lt;td>hugo 博客命令行工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nodejs npm&lt;/td>
&lt;td>nodejs 开发环境&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>plasma-browser-integration&lt;/td>
&lt;td>plasma 桌面的浏览器集成插件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>translate-shell&lt;/td>
&lt;td>终端翻译工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>postman-bin&lt;/td>
&lt;td>api 测试工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ark&lt;/td>
&lt;td>KDE 官方的压缩文件查看器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>unzip unrar p7zip&lt;/td>
&lt;td>几种常用的压缩格式&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gnome-keyring&lt;/td>
&lt;td>钥匙串管理，vscode 连接 github 需要使用到&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>peek&lt;/td>
&lt;td>linux 下一个非常简单的 gif 录制工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>numix-circle-icon-theme-git&lt;/td>
&lt;td>图标包&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>一行命令安装上面所有应用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo pacman -S git zsh vim tmux visual-studio-code-bin tree goland goland-jre spotify keepassxc jdk11-openjdk java11-openjfx docker obs-studio flameshot yay go fcitx5 fcitx5-im fcitx5-chinese-addons telegram-desktop hugo nodejs npm plasma-browser-integration translate-shell postman-bin ark unarchiver unzip unrar p7zip gnome-keyring peek numix-circle-icon-theme-git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="环境配置">环境配置&lt;/h2>
&lt;h3 id="磁盘自动挂载">磁盘自动挂载&lt;/h3>
&lt;p>如果想要将一些其他的磁盘在系统开机时自动挂载，可以先通过 &lt;code>blkid&lt;/code> 命令找到磁盘对应的 UUID，接着在 &lt;code>/etc/fstab&lt;/code> 的末尾按照下面的格式新增一行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>UUID=disk_uuid /path/to/mount disk_format defaults 0 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>disk_uuid&lt;/code> 就是上面通过 &lt;code>blkid&lt;/code> 命令找到的磁盘的 uuid&lt;/li>
&lt;li>&lt;code>/path/to/mount&lt;/code> 是你想要将磁盘挂载到的目录&lt;/li>
&lt;li>&lt;code>disk_format&lt;/code> 是磁盘的文件系统格式，比如 NTFS、EXT4、FAT32 等等&lt;/li>
&lt;li>后面的 &lt;code>defaults 0 0&lt;/code> 如非，必要保持不变即可，其及具体含义可以参照 &lt;a href="https://wiki.archlinux.org/title/fstab">Arch Linux Wiki 关于 fstab 的介绍&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="zsh-配置">zsh 配置&lt;/h3>
&lt;p>oh-my-zsh 提供了一套开箱即用的 zsh 配置，并且有很多额外的主题和插件可供选用，可以通过下面的命令来安装 oh-my-zsh 以及 zsh-autosuggestions、zsh-syntax-highlighting 两个插件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sh -c &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/zsh-users/zsh-autosuggestions &lt;span style="color:#e6db74">${&lt;/span>ZSH_CUSTOM&lt;span style="color:#66d9ef">:-&lt;/span>~/.oh-my-zsh/custom&lt;span style="color:#e6db74">}&lt;/span>/plugins/zsh-autosuggestions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git &lt;span style="color:#e6db74">${&lt;/span>ZSH_CUSTOM&lt;span style="color:#66d9ef">:-&lt;/span>~/.oh-my-zsh/custom&lt;span style="color:#e6db74">}&lt;/span>/plugins/zsh-syntax-highlighting
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果提示 &lt;code>443 拒绝连接&lt;/code> 的话，可以直接访问 &lt;a href="https://github.com/ohmyzsh/ohmyzsh/blob/master/tools/install.sh">ohmyzsh github 仓库&lt;/a>，然后将该文件的内容复制到 install.sh 文件中，使用 &lt;code>bash install.sh&lt;/code> 命令来安装 oh-my-zsh&lt;/p>
&lt;p>安装完成之后编辑 &lt;code>~/.zshrc&lt;/code>，修改 plugins 字段。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-zshrc" data-lang="zshrc">&lt;span style="display:flex;">&lt;span>plugins&lt;span style="color:#f92672">=(&lt;/span>git zsh-autosuggestions zsh-syntax-highlighting extract&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>extract&lt;/code> 插件可以简化命令行解压时复杂的参数，只需 &lt;code>x 压缩包&lt;/code>，即可将压缩包解压到当前目录下。&lt;/p>
&lt;p>一般情况下 &lt;code>zsh-autosuggestions&lt;/code>会将一些待补全的内容以较浅的颜色进行展示，但是异常情况下可能直接以普通文本的形式展示出来，这可能是因为终端的颜色编码配置不正确，需要在 .zshrc 中添加 &lt;code>export TERM=xterm-256color&lt;/code>&lt;/p>
&lt;h3 id="配置-docker">配置 docker&lt;/h3>
&lt;p>使用下面的命令将当前用户添加到 docker 组中，之后就可以通过当前用户身份直接使用 docker。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo usermod -aG docker $USERNAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编辑 &lt;code>/etc/docker/daemon.json&lt;/code>，添加国内镜像源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{ &lt;span style="color:#f92672">&amp;#34;registry-mirrors&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;https://reg-mirror.qiniu.com/&amp;#34;&lt;/span>]}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>阿里也提供了 docker 镜像源服务，但是需要使用个人帐号获取对应的链接，&lt;a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">点此获取&lt;/a>&lt;/p>
&lt;h3 id="go-开发配置">go 开发配置&lt;/h3>
&lt;p>安装 go 依赖自动导入工具&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>go get -u golang.org/x/tools/cmd/goimports
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 go 的依赖下载代理&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># go env -w GO111MODULE=on #新版本的 GO 默认开启此功能，可不添加此行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go env -w GOPROXY&lt;span style="color:#f92672">=&lt;/span>https://goproxy.cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="输入法配置">输入法配置&lt;/h3>
&lt;p>/etc/environment 开头添加以下内容，可以避免 fcitx5 的一些问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>GTK_IM_MODULE=fcitx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>QT_IM_MODULE=fcitx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>XMODIFIERS=@im=fcitx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INPUT_METHOD=fcitx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SDL_IM_MODULE=fcitx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GLFW_IM_MODULE=ibus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deepin-tim-配置">deepin-tim 配置&lt;/h3>
&lt;p>安装 deepin 版 tim 之后需要在设置的开机自启动里添加 &lt;code>/usr/lib/gsd-xsettings&lt;/code> 的自启动脚本。&lt;/p>
&lt;p>调整 tim 的 DPI&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ cd /opt/deepinwine/tools &lt;span style="color:#75715e"># TIM 的安装目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./SetDpi.sh &lt;span style="color:#ae81ff">126&lt;/span> Deepin-TIM &lt;span style="color:#75715e"># 调整 TIM 的 DPI&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="蓝牙配置">蓝牙配置&lt;/h3>
&lt;p>开机启动蓝牙服务&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo systemctl enable bluetooth
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着编辑 &lt;code>/etc/bluetooth/main.conf&lt;/code>，找到 &lt;code>AutoEnable&lt;/code> 字段，取消前面的注释，并将对应的值修改为 &lt;code>true&lt;/code> 就可以在电脑启动的同时开启蓝牙，这样在登录界面就可以直接连接到你的蓝牙外设了&lt;/p>
&lt;h3 id="jetbrains-配置">Jetbrains 配置&lt;/h3>
&lt;p>Jetbrains 系列的软件在 Linux 下默认的字体显示非常辣眼睛，需要同时安装对应的 &lt;code>-jre&lt;/code> 支持才行。如 Goland 就需要安装 &lt;code>goland-jre&lt;/code>&lt;/p>
&lt;p>如果有在 goland 中预览 markdown 文件的需要，还需要安装 &lt;code>java11-openjfx&lt;/code>&lt;/p>
&lt;h3 id="界面美化">界面美化&lt;/h3>
&lt;p>KDE 当前的默认桌面其实已经挺不错的了，此处仅推荐一套图标包 &lt;a href="https://github.com/numixproject/numix-icon-theme-circle">numix-circle-icon-theme&lt;/a>&lt;/p></description></item></channel></rss>