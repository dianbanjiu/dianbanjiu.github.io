<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows on 点半九</title><link>https://www.dianbanjiu.com/tags/windows/</link><description>Recent content in Windows on 点半九</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 07 Jul 2024 13:32:04 +0800</lastBuildDate><atom:link href="https://www.dianbanjiu.com/tags/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows开机启动脚本</title><link>https://www.dianbanjiu.com/post/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</link><pubDate>Sun, 07 Jul 2024 13:32:04 +0800</pubDate><guid>https://www.dianbanjiu.com/post/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</guid><description>&lt;p>目前手上有一台主力设备是 Windows，每次开机都需要手动启动一些服务，虽然之前也有写过一个脚本用来一键启动，但是还是有点麻烦，所以研究了一下如何在开机时自启动&lt;/p>
&lt;p>我的脚本是通过 PowerShell 写的，所以先将自己的脚本封装到一个 .ps1 结尾的文件中。接着&lt;strong>将文件的打开方式设置为 PowerShell&lt;/strong>&lt;br>
注意：如果你之前有设置过 ps1 文件为其他的打开方式，比如记事本，那在下面的操作完成，电脑重启之后，默认就会通过记事本打开脚本，而不是直接运行。&lt;/p>
&lt;p>具体操作，在文件上右键，选择打开方式，找到并选择 pwsh.exe，比如我是通过 scoop 安装的 PowerShell，对应的可执行文件的位置是在 &lt;code>$HOME\scoop\shims\pwsh.exe&lt;/code>&lt;/p>
&lt;p>将脚本放在 &lt;code>$HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code> 下即可&lt;/p>
&lt;p>这个自启操作也适用于其他非脚本的应用程序，不过操作更简单，直接创建一个应用的快捷方式，然后将快捷方式放到 &lt;code>$HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code> 下即可&lt;/p>
&lt;p>下面是一个关于脚本的示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-pwsh" data-lang="pwsh">&lt;span style="display:flex;">&lt;span>$ErrorActionPreference=&lt;span style="color:#e6db74">&amp;#39;SilentlyContinue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Get-Process -Name hello | Stop-Process
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Start-Process -WindowStyle Hidden -FilePath hello &lt;span style="color:#e6db74">&amp;#34;-c &lt;/span>$HOME&lt;span style="color:#e6db74">/hello/conf.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>ErrorActionPreference&lt;/code> 变量是设置脚本如何响应非终止错误，SilentlyContine 代表不显示错误并在不会中断的情况下继续执行，其他可选参数可自行参考pwsh文档&lt;/li>
&lt;li>&lt;code>Get-Process -Name hello | Stop-Process&lt;/code> 尝试获取名字为 hello 的进程，并通过管道传递给 Stop-Process 进程结束它&lt;/li>
&lt;li>&lt;code>Start-Process&lt;/code> 用来启动一个新的进程
&lt;ul>
&lt;li>&lt;code>WindowStyle Hidden&lt;/code> 隐藏窗口执行，即作为一个后台进程启动。默认情况下会以一个终端窗口启动执行脚本，执行完成之后也不会自动关闭窗口&lt;/li>
&lt;li>&lt;code>FilePath&lt;/code> 可以指定可执行文件的路径，如果此命令在环境变量中，可以省略前面的路径信息，直接指定命令名称即可&lt;/li>
&lt;li>如果命令本身还有一些其他的启动参数，可以跟在最后，如果是带空格的参数，可以用双引号括起来，否则脚本会将其识别为 Start-Process 的参数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Windows配置nginx</title><link>https://www.dianbanjiu.com/post/windows%E9%85%8D%E7%BD%AEnginx/</link><pubDate>Thu, 13 Jun 2024 00:45:35 +0800</pubDate><guid>https://www.dianbanjiu.com/post/windows%E9%85%8D%E7%BD%AEnginx/</guid><description>&lt;p>1、安装 nginx&lt;br>
我是通过 scoop 安装的 nginx&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>scoop update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scoop install nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、测试 nginx&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>nginx -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$env&lt;span style="color:#e6db74">:NGINX_HOME&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>命令执行成功之后，在浏览器输入 http://127.0.0.1:80 就可以看到 nginx 的输出信息了&lt;/p>
&lt;p>3、以后台进程的方式启动 nginx&lt;br>
通过上面的命令启动 nginx 后可以发现，nginx 进程会占用当前的终端，可以通过 pwsh 的命令将 nginx 作为后台进程启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>start -WindowStyle Hidden nginx -ArgumentList &lt;span style="color:#e6db74">&amp;#34;-p &lt;/span>$env&lt;span style="color:#e6db74">:NGINX_HOME&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因为是通过 scoop 安装的，对应的配置文件也是位于 scoop 的目录下，所以启动 nginx 的时候也需要通过&lt;code>-p&lt;/code>指定配置对应的目录&lt;/p>
&lt;p>nginx 的配置目录默认位于 &lt;code>$HOME\scoop\persist\nginx&lt;/code>，如果需要增加新的 server 配置，也需要配置在这个目录下&lt;/p></description></item><item><title>移除默认的 Win+` 快捷键</title><link>https://www.dianbanjiu.com/post/%E7%A7%BB%E9%99%A4%E9%BB%98%E8%AE%A4%E7%9A%84-win+-%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Sat, 17 Sep 2022 02:00:26 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E7%A7%BB%E9%99%A4%E9%BB%98%E8%AE%A4%E7%9A%84-win+-%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description>&lt;p>在 Windows 上安装 &lt;code>终端&lt;/code> 之后，&lt;strong>Win+`&lt;/strong> 快捷键会以聚焦模式打开终端（下拉式终端的样子）。这个快捷键可以通过下面的方式来移除&lt;/p>
&lt;ol>
&lt;li>打开终端的设置界面，点击左下角的 &lt;strong>打开 JSON 文件&lt;/strong>&lt;br>
&lt;img src="https://s2.loli.net/2022/09/17/b2GDLoEchN4wknK.png" alt="terminal_setting_interface.png">&lt;/li>
&lt;li>在 &lt;code>actions&lt;/code> 数组中新增下面的内容&lt;br>
&lt;img src="https://s2.loli.net/2022/09/17/k3luvNfP5pa2rjx.png" alt="terminal_setting_file.png">&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;keys&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;win+`&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后重启 &lt;code>终端&lt;/code> 即可&lt;/p></description></item><item><title>Windows 包管理器 —— Scoop</title><link>https://www.dianbanjiu.com/post/windows-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8--scoop/</link><pubDate>Thu, 21 Apr 2022 00:08:16 +0800</pubDate><guid>https://www.dianbanjiu.com/post/windows-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8--scoop/</guid><description>&lt;p>我很喜欢 Linux 软件的安装方式，如果一个软件存在于软件源中，只需一行命令就可以安装好这个软件，而且大多数时候也不用担心下到什么流氓程序。所以当我有了一台 Windows 的电脑之后，我也尝试去寻找 Windows 下是否也有类似的工具，最终，我找到了 Scoop&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>官网地址： &lt;a href="https://scoop.sh/">https://scoop.sh/&lt;/a>&lt;/p>
&lt;p>首先确保系统已经安装好下面两个程序：&lt;/p>
&lt;ol>
&lt;li>PowerShell 的版本 &amp;gt;= 5&lt;/li>
&lt;li>.NET Framework 的版本 &amp;gt;=4.5&lt;/li>
&lt;/ol>
&lt;p>通过管理员身份启动一个终端窗口，依次执行下面的命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Set-ExecutionPolicy RemoteSigned -scope CurrentUser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iwr -useb get.scoop.sh | iex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="常用操作">常用操作&lt;/h2>
&lt;ul>
&lt;li>查看帮助信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop help
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>查看某个子命令的帮助信息，如 update&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop help update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>查询软件包，如 aria2&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop search aria2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>查看某一个软件包的主页，如 aria2&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop home aria2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>安装软件包，如 aria2&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop install aria2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>更新某个软件包，如 aria2&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop update aria2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>更新软件源&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>更新所有已安装的软件包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop update -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>展示软件包状态以及可更新的软件包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>清除历史包缓存&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop cache rm *
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>移除历史旧版本&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop cleanup *
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>启用 extras 软件源&lt;/li>
&lt;/ul>
&lt;p>主软件源中包含的软件比较有限，可以通过下面的命令来启用 extras 软件源。main 和 extras 软件源都是由 scoop 官方维护的，由其他用户维护的软件源可以通过类似的方式进行添加，只需要把 extras 替换为对应软件源的链接即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop bucket add extras
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>移除某个软件源，如 extras&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop bucket rm extras
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="进阶操作">进阶操作&lt;/h2>
&lt;ul>
&lt;li>设置代理&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop config proxy &lt;span style="color:#ae81ff">127.0&lt;/span>.0.&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>&lt;span style="color:#ae81ff">8889&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>通过 aria2c 启用多线程下载&lt;/li>
&lt;/ul>
&lt;p>aria2 安装之后，Scoop 默认就会启用 aria2 的多线程下载&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop install aria2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启用 aria2 之后，scoop 默认会打印一些警告信息，虽然很有道理，但是我选择关闭提示&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1pJJ51V.png" alt="https://i.imgur.com/1pJJ51V.png">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop config aria2-warning-enabled false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>关闭 aria2 多线程下载&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>scoop config aria2-enabled false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="常见问题">常见问题&lt;/h2>
&lt;h3 id="在更新下载程序包的时候出现类似-invoke-webrequest--无法连接到远程服务器-的报错">在更新/下载程序包的时候出现类似 &lt;code>Invoke-WebRequest : 无法连接到远程服务器&lt;/code> 的报错&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/psX044t.png" alt="https://i.imgur.com/psX044t.png">&lt;/p>
&lt;p>这很有可能是 scoop 对一些系统目录没有访问权限，而这些程序包的安装又需要对一些系统目录进行操作，这个时候可以 &lt;code>管理员身份&lt;/code> 运行终端，然后重新执行安装/更新命令&lt;/p>
&lt;h3 id="scoop-安装程序失败之后在-status-命令里面会一直输出错误信息">scoop 安装程序失败之后，在 status 命令里面会一直输出错误信息&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>PS &amp;gt; scoop status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scoop is up to date.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name Installed Version Latest Version Missing Dependencies Info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---- ----------------- -------------- -------------------- ----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snipaste Install failedManifest removed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以通过 uninstall 这个软件包来移除这个提示&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>PS &amp;gt; scoop uninstall snipaste
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ERROR &lt;span style="color:#e6db74">&amp;#39;snipaste&amp;#39;&lt;/span> isn&lt;span style="color:#e6db74">&amp;#39;t installed correctly.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Removing older version (1.16.2).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>snipaste&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> was uninstalled.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PS &amp;gt; scoop status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scoop is up to date.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Everything is ok!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Linux 访问 Windows 共享目录</title><link>https://www.dianbanjiu.com/post/linux-%E8%AE%BF%E9%97%AE-windows-%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/</link><pubDate>Thu, 14 Apr 2022 16:36:33 +0800</pubDate><guid>https://www.dianbanjiu.com/post/linux-%E8%AE%BF%E9%97%AE-windows-%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/</guid><description>&lt;p>因为工作需要，需要在电脑上安装一个 VPN 程序，但是官方并没有提供 Linux 版本，通过 wine 虽然能安装成功，但是界面总是显示不出来。实在不想折腾了，就直接装了一个 Windows 的虚拟机，有一些需要编辑的文件就通过共享的方式在宿主机上进行编辑&lt;/p>
&lt;p>Linux 上 samba 的安装以及 Windows 文件共享的设置倒是一帆风顺，没出现什么问题，不过在 Linux 下获取 Windows 共享目录的时候却出现了异常&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 正常打印出了 users 目录下的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ smbclient -c &lt;span style="color:#e6db74">&amp;#34;dir&amp;#34;&lt;/span> //ip/users -U user%passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. DR &lt;span style="color:#ae81ff">0&lt;/span> Wed Apr &lt;span style="color:#ae81ff">13&lt;/span> 17:52:49 &lt;span style="color:#ae81ff">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.. DR &lt;span style="color:#ae81ff">0&lt;/span> Wed Apr &lt;span style="color:#ae81ff">13&lt;/span> 17:52:49 &lt;span style="color:#ae81ff">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Default DHR &lt;span style="color:#ae81ff">0&lt;/span> Wed Apr &lt;span style="color:#ae81ff">13&lt;/span> 17:52:49 &lt;span style="color:#ae81ff">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 继续打印用户目录下的内容时出现异常&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ smbclient -c &lt;span style="color:#e6db74">&amp;#34;dir&amp;#34;&lt;/span> //ip/users/test -U user%passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree connect failed: NT_STATUS_BAD_NETWORK_NAME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经过一番冲浪之后大概确定原因是 Windows 使用的 samba 版本是 v1，而 Linux 下的 samba 版本是 v4，v4 并不直接向下兼容，&lt;code>smbclient&lt;/code> 又不支持指定 samba 版本，不指定 samba 版本就无法直接打印出共享目录中的文件，死循环&lt;/p>
&lt;p>不过通过 mount 使用 cifs 格式挂载共享目录的时候是可以指定 samba 版本的，修改命令，通过下面的方式可以将共享目录挂载到本地&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mount -t cifs -o username&lt;span style="color:#f92672">=&lt;/span>windows_user,password&lt;span style="color:#f92672">=&lt;/span>windows_user_password,vers&lt;span style="color:#f92672">=&lt;/span>1.0,gid&lt;span style="color:#f92672">=&lt;/span>$GID,uid&lt;span style="color:#f92672">=&lt;/span>$UID //ip/共享路径 /home/test/samba_mount_path
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>这里注意把 windows_user、windows_user_password、ip、共享路径修改为 Windows 对应的信息，/home/test/samba_mount_path 是在 Linux 下的挂载点&lt;/li>
&lt;li>vers=1.0 指定的是 samba 的协议版本&lt;/li>
&lt;/ul>
&lt;p>因为一般情况下都是由 root 用户来进行 mount 操作的，挂载到本地的目录所属用户及用户组也是 root，对其中的文件进行操作时需要添加 sudo 前缀命令，为了让普通用户能直接操作，此处需要指定 gid=$GID,uid=$UID 两个参数，分别代表当前用户所属用户组的 ID 和当前用户的 ID&lt;/p></description></item><item><title>关于 Windows10 无法加载硬盘</title><link>https://www.dianbanjiu.com/post/%E5%85%B3%E4%BA%8E-windows10-%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E7%A1%AC%E7%9B%98/</link><pubDate>Sat, 06 Nov 2021 13:38:04 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%85%B3%E4%BA%8E-windows10-%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E7%A1%AC%E7%9B%98/</guid><description>&lt;p>今天装好 Windows 之后，发现我的 WD Passport Ultra 硬盘无法被系统正常加载。最初的报错忘记截图了，但是在设备管理器中可以看到磁盘的驱动状态是有问题的。&lt;br>
&lt;img src="https://i.imgur.com/BXgY2LS.png" alt="">
我的硬盘是 NTFS 格式的，虽然是在 Linux 下做的格式化，但是理论上 Windows 是可以识别的，而且我把硬盘接到手机上，手机是可以正常读取的。&lt;/p>
&lt;p>我去网上查了一下，说的最多的方案就是在设备管理器中，先删除该设备的驱动，然后重新插入硬盘就可以了。我尝试了一下，还是一样无法识别。&lt;/p>
&lt;p>我注意到在设备管理器中，除了没被挂载之外，磁盘其他的信息及状态都是正常的。后来想到 Windows 下面一般是根据盘符，比如 C、D 盘来区分磁盘的，既然它没被自动挂载，那我就手动给个盘符好了。&lt;/p>
&lt;p>然后，啊，然后它就好了😲，就可以正常被 Windows 挂载了。&lt;/p>
&lt;p>具体做法：&lt;/p>
&lt;ol>
&lt;li>打开资源管理器，在【&lt;strong>此电脑&lt;/strong>】上右键，选择【&lt;strong>管理&lt;/strong>】&lt;/li>
&lt;li>在打开的【&lt;strong>计算机管理&lt;/strong>】左侧选择【&lt;strong>磁盘管理&lt;/strong>】&lt;/li>
&lt;li>找到你之前无法被自动挂载的磁盘，在磁盘上面右键选择【&lt;strong>更改驱动器号和路径&lt;/strong>】&lt;/li>
&lt;li>给这个磁盘添加一个盘符就可以了&lt;/li>
&lt;/ol>
&lt;p>需要注意的是，这个时候如果你再回到设备管理器中，你会惊奇的发现，磁盘的驱动状态还是异常的😂，不过问题不大，你这时候再重新插拔磁盘，磁盘应该已经可以被自动挂载了。&lt;/p></description></item><item><title>如何在 Linux 下制作 Windows 启动器</title><link>https://www.dianbanjiu.com/post/%E5%A6%82%E4%BD%95%E5%9C%A8-linux-%E4%B8%8B%E5%88%B6%E4%BD%9C-windows-%E5%90%AF%E5%8A%A8%E5%99%A8/</link><pubDate>Sat, 06 Nov 2021 12:24:27 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%A6%82%E4%BD%95%E5%9C%A8-linux-%E4%B8%8B%E5%88%B6%E4%BD%9C-windows-%E5%90%AF%E5%8A%A8%E5%99%A8/</guid><description>&lt;p>在 Linux 下制作 Windows 启动盘，有三种常用的方式：dd、WoeUSB、Ventoy。&lt;/p>
&lt;h2 id="woeusb">WoeUSB&lt;/h2>
&lt;p>WoeUSB 可以使用 &lt;code>pip3 install WoeUsb-ng&lt;/code> 进行安装。&lt;/p>
&lt;p>WoeUSB 我以前用的时候还可以，但是这次也不知道为什么，虽然可以正常写入镜像，但是做的启动盘始终不能进入 Windows 引导界面，换了好几个版本的 Windows10 镜像都是一样的。&lt;/p>
&lt;h2 id="ventoy">Ventoy&lt;/h2>
&lt;p>Ventoy 的话，用起来比较简单，首先去 &lt;a href="https://www.ventoy.net/en/download.html">Ventoy 官方下载页面&lt;/a> 下载压缩包，解压后在终端执行 &lt;code>sudo bash /path/to/VentoyWeb.sh&lt;/code> 启动服务，接着访问启动信息中展示的本地端口，像我这里就是 24680 端口。在页面上选择你用来做启动盘的设备，然后点击安装即可。
&lt;img src="https://i.imgur.com/cH5zfZ3.png" alt="">&lt;br>
&lt;img src="https://i.imgur.com/F0b0m9S.png" alt="">
上面之所以需要使用 sudo 来运行，一方面是因为 Ventoy 需要获取你的 PC 上现在都有哪些存储设备，另一方面是因为安装的过程中需要对设备进行格式化。&lt;/p>
&lt;p>安装好 Ventoy 之后，你只需要把各种 ISO 镜像文件扔到安装 Ventoy 的 U 盘中即可。&lt;/p>
&lt;p>如果你现在看一下这个 U 盘的分区结构你可以发现 U 盘上会有两个分区，一大一小，后面很小的那个分区放的就是 Ventoy 的引导文件，前面这个分区是用来放你的镜像文件的，理论上你把前面这个分区用来存放其他文件也是完全没问题的。&lt;/p>
&lt;p>这次电脑成功进入了 Ventoy 的引导界面，但是在我选择了 ISO 文件之后，Ventoy 提示我缺少一些东西 Windows 引导失败（我裂开了）我又重新下载了最新的 Windows10 镜像，还是会出现同样的问题，可能是需要安装一些其他的 Ventoy 插件或者是 Ventoy 对于 AMD 的支持不太好？但是我没有继续折腾了。&lt;/p>
&lt;h2 id="dd">dd&lt;/h2>
&lt;p>这一 Part 的标题虽然是 dd，但是你也可以直接使用复制粘贴来完成，这个方案相比上面两个稍微麻烦一点，但是并不复杂，而且这也是我唯一测试成功的方案😭&lt;/p>
&lt;p>下面涉及到对磁盘的分区操作，熟悉终端工具的可以直接用 fdisk 跟 mkfs 完成，习惯 GUI 的可以使用 gparted 完成。&lt;/p>
&lt;p>下面是使用 dd 创建 Windows 启动盘的步骤：&lt;/p>
&lt;ol>
&lt;li>备份好 U 盘中的数据&lt;/li>
&lt;li>删除 U 盘中所有的分区&lt;/li>
&lt;li>创建 GPT 分区表&lt;/li>
&lt;li>在 U 盘上创建两个分区，其中第二个分区只需要留 300MB 的空间即可，剩下的可以全部给第一个分区（&lt;strong>注意：大的分区在前面，里面会存放 Windows 镜像中的文件，小的分区在后面，里面会放引导文件，两个分区的顺序一定不可以错：前大后小&lt;/strong>）
&lt;ol>
&lt;li>第一个分区格式化为 NTFS 格式&lt;/li>
&lt;li>第二个分区格式化为 Fat32 格式&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>直接复制或者使用 dd 将 Windows 镜像中的文件写入到 U 盘的第一个分区&lt;/li>
&lt;li>下载由 Rufus 提供的 &lt;a href="https://github.com/pbatard/rufus/blob/master/res/uefi/uefi-ntfs.img">uefi-ntfs.img&lt;/a> UEFI 引导镜像&lt;/li>
&lt;li>复制 uefi-utfs.img 中的所有文件到 U 盘的第二个分区中&lt;/li>
&lt;/ol>
&lt;p>待所有文件都写入完成之后，在 BIOS 中将 U 盘移动到启动顺序的第一个，然后启动电脑，应该就可以看到 Windows 的引导界面了。&lt;/p></description></item><item><title>Linux 添加 Windows 字体库</title><link>https://www.dianbanjiu.com/post/linux-%E6%B7%BB%E5%8A%A0-windows-%E5%AD%97%E4%BD%93%E5%BA%93/</link><pubDate>Wed, 27 May 2020 23:02:52 +0800</pubDate><guid>https://www.dianbanjiu.com/post/linux-%E6%B7%BB%E5%8A%A0-windows-%E5%AD%97%E4%BD%93%E5%BA%93/</guid><description>&lt;p>如果你有尝试过在 Linux 下打开 Windows 制作的 word 文档，或者在 Windows 下打开 Linux 制作的 word 文档，你可能会惊喜的发现在两个平台下同一个 word 文件的样式截然不同，这对于一些对格式要求比较严格的情况还是比较麻烦的。不过在 Linux 下还是有很简单的解决办法的。&lt;/p>
&lt;p>测试平台及工具：&lt;/p>
&lt;ul>
&lt;li>Manjaro Linux&lt;/li>
&lt;li>WPS&lt;/li>
&lt;/ul>
&lt;h2 id="way-1复制粘贴推荐">way 1：复制粘贴（推荐）&lt;/h2>
&lt;p>首先你需要一台装有 Windows 的电脑或者一个装有 Windows 的虚拟机，从 C 盘的 &lt;code>windows/Fonts&lt;/code> 中复制出你需要的字体，或者干脆直接复制整个 &lt;code>Fonts&lt;/code> 目录；&lt;/p>
&lt;p>然后在你的 Linux 的 &lt;code>/usr/share/fonts/&lt;/code> 目录下新建一个目录，比如 WinFonts 之类的，名字可以随意，只要你知道它是干啥的就好；&lt;/p>
&lt;p>接着把你第一步复制出来的字体放到第二步新建的目录中；&lt;/p>
&lt;p>最后执行下面的指令刷新字体：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo fc-cache -fv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这下再打开你之前格式显示有问题的 word 文档，应该就可以正常显示了。&lt;/p>
&lt;h2 id="way-2从-aur-安装">way 2：从 AUR 安装&lt;/h2>
&lt;p>万能的 AUR 里基本只有你想不到的，安装 win 下的字体也同样是小菜一碟，而且后续如果有新的字体，通过 AUR 安装的字体还可以无感更新。&lt;/p>
&lt;p>AUR 里有很多 win 的字体包，甚至还分为不同的 win 系统，比如 win10、win7，这里你可以只安装一个 &lt;code>ttf-ms-fonts&lt;/code> 包，这个包基本上就包含的比较全了。&lt;/p>
&lt;p>最后同样需要执行一下上面提到的那条命令刷新一下字体。&lt;/p>
&lt;p>这里推荐第一个方法，因为第二个方法涉及到的字体都要在线下载，速度上自然比不过本地拷贝，而且常用的字体其实并不会很多，而且这些常用的字体通常也都比较稳定更新不会很多。&lt;/p>
&lt;h2 id="额外补充">额外补充&lt;/h2>
&lt;p>我在从使用命令刷新完字体后，感觉整个系统的字体都变得“锐利”起来了，大概就是变成了 Windows 字体的那个样子，我虽然是完整拷贝了 Windows 的字体库，但是我并没有设置本地的字体为 Windows 的字体，这个问题还得后面再看看是什么原因导致的。&lt;/p></description></item></channel></rss>